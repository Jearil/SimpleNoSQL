plugins {
    id 'com.android.library'
}

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.2'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 30
        versionCode 2
        versionName "0.5"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

//
//android.libraryVariants.all { variant ->
//    def name = variant.buildType.name
//    if (name.equals(com.android.builder.core.BuilderConstants.DEBUG)) {
//        return; // Skip debug builds.
//    }
//    def task = project.tasks.create "_jar${name.capitalize()}", Jar
//    task.dependsOn variant.javaCompile
//    task.from variant.javaCompile.destinationDir
//    print variant.javaCompile.destinationDir.toString()
//    artifacts.add('archives', task);
//}
//
//android.libraryVariants.all { variant ->
//    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
//        description "Generates Javadoc for $variant.name."
//        source = variant.javaCompile.source
//        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
//        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
//        options.links("http://docs.oracle.com/javase/7/docs/api/");
//        options.links("http://d.android.com/reference/");
//        exclude '**/BuildConfig.java'
//        exclude '**/R.java'
//    }
//}

dependencies {
    api 'com.google.code.gson:gson:2.8.5'

    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
